name: Docker vulnerability scan

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

env:
  REGISTRY: 127893201980.dkr.ecr.ca-central-1.amazonaws.com/scan-files

permissions:
  id-token: write
  security-events: write

jobs:
  docker-vulnerability-scan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - api
          - module/s3-scan-object

    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::127893201980:role/scan-files-plan
          role-session-name: ECRPushAndDeploy
          aws-region: ca-central-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Docker vulnerability scan
        uses: cds-snc/security-tools/.github/actions/docker-scan@34794baf2af592913bb5b51d8df4f8d0acc49b6f # v3.2.0
        env:
          TRIVY_DB_REPOSITORY: ${{ vars.TRIVY_DB_REPOSITORY }}
        with:
          docker_image: "${{ env.REGISTRY }}/${{ matrix.image }}:latest"
          dockerfile_path: "${{ matrix.image }}/Dockerfile"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
