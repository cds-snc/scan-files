name: "Terraform"

on:
  push:
    branches:
      - main

env:
  TERRAFORM_VERSION: 1.0.3
  TERRAGRUNT_VERSION: v0.31.1
  TF_VAR_fastapi_secret_key: ${{ secrets.TF_VARS_FASTAPI_SECRET_KEY }}
  TF_VAR_mlwr_host: ${{ secrets.MLWR_HOST }}
  TF_VAR_mlwr_user: ${{ secrets.MLWR_USER }}
  TF_VAR_mlwr_key: ${{ secrets.MLWR_KEY }}
  TF_VAR_api_auth_token: ${{ secrets.TF_VARS_API_AUTH_TOKEN }}
  TF_VAR_rds_password: ${{ secrets.TF_VARS_RDS_PASSWORD }}
  AWS_REGION: ca-central-1

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terragrunt-apply:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir -p bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/terragrunt
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          filters: |
            api:
              - 'terragrunt/aws/api/**'
              - 'terragrunt/env/api/**'
            hosted_zone:
              - 'terragrunt/aws/hosted_zone/**'
              - 'terragrunt/env/hosted_zone/**'              
            scan_queue:
              - 'terragrunt/aws/scan_queue/**'
              - 'terragrunt/env/scan_queue/**'

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::806545929748:role/OIDCGithubWorkflowRole
          role-session-name: TFApply
          aws-region: ${{ env.AWS_REGION }}

      - name: Apply hosted_zone
        if: ${{ steps.filter.outputs.hosted_zone == 'true' }}
        working-directory: terragrunt/env/hosted_zone
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply api
        if: ${{ steps.filter.outputs.api == 'true' }}
        working-directory: terragrunt/env/api
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply scan_queue
        if: ${{ steps.filter.outputs.scan_queue == 'true' }}
        working-directory: terragrunt/env/scan_queue
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve
