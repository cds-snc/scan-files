name: "Terraform plan staging"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "terragrunt/**"
      - "!terragrunt/env/production/**"
      - ".github/workflows/tf_plan_staging.yml"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.3.5
  TERRAGRUNT_VERSION: 0.40.2
  CONFTEST_VERSION: 0.27.0
  TF_VAR_api_auth_token: ${{ secrets.STAGING_API_AUTH_TOKEN }}
  TF_VAR_api_secret_environment_variables: '${{ secrets.STAGING_API_SECRET_ENVIRONMENT_VARIABLES }}'
  TF_VAR_aws_org_id: ${{ secrets.AWS_ORG_ID }}
  TF_VAR_aws_org_id_old: ${{ secrets.AWS_ORG_ID_OLD }}
  TF_VAR_rds_password: ${{ secrets.STAGING_RDS_PASSWORD }}
  TF_VAR_slack_webhook_url: ${{ secrets.SCAN_FILES_STAGING_OPS_WEBHOOK }}
  TF_VAR_sentinel_customer_id: ${{ secrets.SENTINEL_CUSTOMER_ID }}
  TF_VAR_sentinel_shared_key: ${{ secrets.SENTINEL_SHARED_KEY }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-plan:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: alarms
          - module: api
          - module: hosted_zone
          - module: integration_test
          - module: s3_scan_object

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::127893201980:role/scan-files-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan
        uses: cds-snc/terraform-plan@5311f3dac704235dde778e30fa7d2bd0c0d8036f # v3.2.0
        with:
          comment-delete: true
          comment-title: "Staging: ${{ matrix.module }}"
          directory: ./terragrunt/env/staging/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
