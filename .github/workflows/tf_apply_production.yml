name: "Terraform apply production"

on:
  push:
    branches:
      - main
    paths:
      - ".github/manifests/infrastructure_version"
      - ".github/workflows/tf_apply_production.yml"

env:
  TERRAFORM_VERSION: 1.0.3
  TERRAGRUNT_VERSION: 0.38.4
  TF_VAR_api_auth_token: ${{ secrets.PRODUCTION_API_AUTH_TOKEN }}
  TF_VAR_api_secret_environment_variables: '${{ secrets.PRODUCTION_API_SECRET_ENVIRONMENT_VARIABLES }}'
  TF_VAR_aws_org_id: ${{ secrets.AWS_ORG_ID }}
  TF_VAR_aws_org_id_old: ${{ secrets.AWS_ORG_ID_OLD }}
  TF_VAR_rds_password: ${{ secrets.PRODUCTION_RDS_PASSWORD }}
  TF_VAR_slack_webhook_url: ${{ secrets.SCAN_FILES_PROD_OPS_WEBHOOK }}
  AWS_REGION: ca-central-1

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terragrunt-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Get infrastructure version
        run: echo "INFRASTRUCTURE_VERSION=$(cat .github/manifests/infrastructure_version)" >> $GITHUB_ENV

      - name: Checkout infrastructure version tag
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          ref: ${{ env.INFRASTRUCTURE_VERSION }}

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # tag=v1.7.0
        with:
          role-to-assume: arn:aws:iam::806545929748:role/OIDCGithubWorkflowRole
          role-session-name: TFApply
          aws-region: ${{ env.AWS_REGION }}

      - name: Apply hosted_zone
        working-directory: terragrunt/env/production/hosted_zone
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply integration_test
        working-directory: terragrunt/env/production/integration_test
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply api
        working-directory: terragrunt/env/production/api
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply s3_scan_object
        working-directory: terragrunt/env/production/s3_scan_object
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply scan_queue
        working-directory: terragrunt/env/production/scan_queue
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply alarms
        working-directory: terragrunt/env/production/alarms
        run: terragrunt apply --terragrunt-non-interactive -auto-approve
