name: "Terraform plan production"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/manifests/infrastructure_version"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.8.2
  TERRAGRUNT_VERSION: 0.58.3
  CONFTEST_VERSION: 0.27.0
  TF_VAR_api_auth_token: ${{ secrets.PRODUCTION_API_AUTH_TOKEN }}
  TF_VAR_api_secret_environment_variables: '${{ secrets.PRODUCTION_API_SECRET_ENVIRONMENT_VARIABLES }}'
  TF_VAR_aws_org_id: ${{ secrets.AWS_ORG_ID }}
  TF_VAR_aws_org_id_old: ${{ secrets.AWS_ORG_ID_OLD }}
  TF_VAR_rds_password: ${{ secrets.PRODUCTION_RDS_PASSWORD }}
  TF_VAR_slack_webhook_url: ${{ secrets.SCAN_FILES_PROD_OPS_WEBHOOK }}
  TF_VAR_sentinel_customer_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
  TF_VAR_sentinel_shared_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}
permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-plan:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: alarms
          - module: api
          - module: hosted_zone
          - module: integration_test
          - module: s3_scan_object
          - module: scan_queue

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Get infrastructure version
        run: echo "INFRASTRUCTURE_VERSION=$(cat .github/manifests/infrastructure_version)" >> $GITHUB_ENV

      - name: Checkout infrastructure version tag
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ env.INFRASTRUCTURE_VERSION }}

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::806545929748:role/scan-files-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan
        uses: cds-snc/terraform-plan@e710cb1446e5dfe69a0182603fb06b5282d7eb07 # v3.4.3
        with:
          comment-delete: true
          comment-title: "Production: ${{ matrix.module }}"
          directory: ./terragrunt/env/production/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
