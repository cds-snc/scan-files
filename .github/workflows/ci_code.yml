name: Lint, format and test code
on:
  workflow_dispatch:
  pull_request:
    paths:
      - api/**
      - module/s3-scan-object/**
      - terragrunt/**
      - .github/workflows/ci_code.yml

env:
  TERRAGRUNT_VERSION: v0.31.1

jobs:

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.10@sha256:34f4ee87fed96f254c4970e6a348c24b24b4f05ebb0880e29c8d15a5cde4e763
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: scan-files
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      fail-fast: false
      matrix:
          folder: ["api", "module/s3-scan-object", "terragrunt"]

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Check for changes
        uses: dorny/paths-filter@7267a8516b6f92bdb098633497bad573efdbf271 # v2.12.0
        id: filter
        with:
          filters: |
            changes:
              - '${{ matrix.folder }}/**'
              - '.github/workflows/ci_code.yml'

      - name: Setup python
        if: ${{ steps.filter.outputs.changes == 'true' && matrix.folder != 'module/s3-scan-object' }}
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: "3.9"

      - name: Setup node
        if: ${{ steps.filter.outputs.changes == 'true' && matrix.folder != 'terragrunt' }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: "20"

      - name: Setup Terragrunt
        if: ${{ steps.filter.outputs.changes == 'true' && matrix.folder == 'terragrunt' }}
        run: |
          mkdir -p bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/*
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Install dev dependencies
        if: ${{ steps.filter.outputs.changes == 'true' }}
        working-directory: ${{ matrix.folder }}
        run: make install-dev

      - name: Install dependencies
        if: ${{ steps.filter.outputs.changes == 'true' }}
        working-directory: ${{ matrix.folder }}
        run: make install

      - name: Lint
        if: ${{ steps.filter.outputs.changes == 'true' }}
        working-directory: ${{ matrix.folder }}
        run: make lint-ci

      - name: Format
        if: ${{ steps.filter.outputs.changes == 'true' }}
        working-directory: ${{ matrix.folder }}
        run: make fmt-ci

      - name: Test
        if: ${{ steps.filter.outputs.changes == 'true' }}
        working-directory: ${{ matrix.folder }}
        env:
          SQLALCHEMY_DATABASE_URI: postgresql://postgres:postgres@127.0.0.1/scan-files
          SQLALCHEMY_DATABASE_TEST_URI: postgresql://postgres:postgres@127.0.0.1/scan-files
        run: make test
